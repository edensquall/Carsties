name: Build and publish

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      continue: 'false'
    strategy:
      matrix:
        service:
          - name: 'edensquall/auction-svc'
            path: 'src/AuctionService'
          - name: 'edensquall/search-svc'
            path: 'src/SearchService'
          - name: 'edensquall/bid-svc'
            path: 'src/BiddingService'
          - name: 'edensquall/identity-svc'
            path: 'src/IdentityService'
          - name: 'edensquall/gateway-svc'
            path: 'src/GatewayService'
          - name: 'edensquall/notify-svc'
            path: 'src/NotificationService'
          - name: 'edensquall/web-app'
            path: 'frontend/web-app'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Check for changes in service path
      run: |
        if git diff --quiet HEAD^ HEAD -- ${{matrix.service.path}}; then
          echo "No changes in ${{matrix.service.path}}. Skipping build"
          echo "continue=false" >> $GITHUB_ENV
        else
          echo "Changes detected in ${{matrix.service.path}}. Processding with build"
          echo "continue=true" >> $GITHUB_ENV
        fi

    - name: Set up Docker buildx
      if: env.continue == 'true'
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker
      if: env.continue == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_TOKEN}}
    
    - name: Build and push docker image
      if: env.continue == 'true'
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{matrix.service.path}}/Dockerfile
        push: true
        tags: ${{matrix.service.name}}:latest
  apply-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          version: '>= 520.0.0'

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials carsties \
            --zone asia-east1-a \
            --project ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Apply the K8S deployments
        run: kubectl apply -f infra/K8S & kubectl apply -f infra/prod-k8s